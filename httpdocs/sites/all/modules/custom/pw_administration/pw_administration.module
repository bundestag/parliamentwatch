<?php
/**
 * @file
 * Code for the PW Administration feature.
 */

include_once 'pw_administration.features.inc';
include_once 'pw_administration.access_callbacks.inc';


/**
 * Implements hook_menu().
 */
function pw_administration_menu() {
  $items = [];

  $items['admin/abgeordnetenwatch'] = [
    'title' => 'Abgeordnetenwatch',
    'page callback' => 'pw_administration_dashboard_pagecallback',
    'access callback' => 'pw_administration_dashboard_pagecallback_access',
    'file' => 'pw_administration.pages.inc',
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'management'
  ];


  $items['admin/abgeordnetenwatch/wahlen-parlamente'] = [
    'title' => 'Wahlen & Parlamente',
    'page callback' => 'pw_administration_wahlenparlamente_pagecallback',
    'access callback' => 'pw_administration_wahlenparlamente_pagecallback_access',
    'file' => 'pw_administration.pages.inc',
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'management'
  ];



  return $items;
}


/**
 * Implements hook_menu_alter().
 *
 * Move the "Merge terms" tab to the end of the tab list
 */
function pw_administration_menu_alter(&$items) {
  if (isset($items['taxonomy/term/%taxonomy_term/merge'])) {
    $items['taxonomy/term/%taxonomy_term/merge']['weight'] = 100;
  }
}


/**
 * Implements hook_admin_paths().
 *
 * Define some paths to use the admin theme
 */
function pw_administration_admin_paths() {
  $paths = array(
    'taxonomy/term/*/politicians' => TRUE,
    'taxonomy/term/*/polls' => TRUE,
    'taxonomy/term/*/politicians/export' => TRUE,
    'taxonomy/term/*/polls/export' => TRUE,
    'node/*/votes' => TRUE,
    'node/*/votes/export' => TRUE,
    'taxonomy/term/*/committees' => TRUE,
    'taxonomy/term/*/committees/export' => TRUE,
    'taxonomy/term/*/nodes' => TRUE,
    'taxonomy/term/*/electoral-regions' => TRUE,
    'taxonomy/term/*/constituencies' => TRUE,
    'taxonomy/term/*/reset-user-archive-cache' => TRUE
  );
  return $paths;
}


/**
 * implements hook_form_alter
 *
 * @param $form
 * @param $form_state
 * @param $form_id
 */
function pw_administration_form_alter(&$form, &$form_state, $form_id) {
  // on parliament term form allow as many zips as we want
  if ($form_id == 'taxonomy_form_term' && isset($form["field_constituency_area_codes"])) {
    if (isset($form["field_constituency_area_codes"]["und"]["#maxlength"])) {
      $form["field_constituency_area_codes"]["und"]["#maxlength"] = 10000;
    }

    if (isset($form["field_constituency_area_codes"]["und"]["#autocomplete_path"])) {
      unset($form["field_constituency_area_codes"]["und"]["#autocomplete_path"]);
    }
  }
}