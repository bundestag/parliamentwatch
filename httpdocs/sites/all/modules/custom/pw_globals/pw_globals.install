<?php

/**
 * @file
 * Update functions for the pw_globals module.
 */

/**
 * Disable obsolete modules.
 */
function pw_globals_update_7100() {
  $modules = [
    'jquery_dollar',
    'menu_import',
    'search_api_views',
    'site_verify',
    'views_xml_backend',
  ];
  module_disable($modules);
}

/**
 * Increase weight of pw_search_api.
 */
function pw_globals_update_7101() {
  db_update('system')
    ->fields(['weight' => 1])
    ->condition('name', 'pw_search_api')
    ->execute();
}

/**
 * Adds a new menu block.
 *
 * @param array $block
 *   The basic block configuration.
 *
 * @param array $config
 *   The menu block configuration.
 */
function _pw_globals_add_menu_block($block, $config) {
  $block_ids = variable_get('menu_block_ids', array());
  $delta = empty($block_ids) ? 1 : max($block_ids) + 1;
  $block_ids[] = $delta;
  variable_set('menu_block_ids', $block_ids);
  $block['delta'] = $config['delta'] = $delta;
  $block['module'] = 'menu_block';
  menu_block_block_save($delta, $config);
  _pw_globals_configure_block($block);
}

/**
 * Configures a block.
 *
 * @param array $block
 *   The block configuration.
 */
function _pw_globals_configure_block($block) {
  $transaction = db_transaction();
  try {
    if (array_key_exists('regions', $block)) {
      foreach (system_list('theme') as $theme) {
        if ($theme->status) {
          $block['regions'] += [$theme->name => BLOCK_REGION_NONE];
        }
      }
      foreach ($block['regions'] as $theme => $region) {
        db_merge('block')
          ->key(['theme' => $theme, 'delta' => $block['delta'], 'module' => $block['module']])
          ->fields([
            'region' => ($region == BLOCK_REGION_NONE ? '' : $region),
            'visibility' => (int) $block['visibility'],
            'pages' => trim($block['pages']),
            'status' => (int) ($region != BLOCK_REGION_NONE),
            'weight' => $block['weight'],
            'cache' => $block['cache'],
          ])
          ->execute();
      }
    }

    if (array_key_exists('roles', $block)) {
      db_delete('block_role')
        ->condition('module', $block['module'])
        ->condition('delta', $block['delta'])
        ->execute();
      $query = db_insert('block_role')->fields(['rid', 'module', 'delta']);
      foreach (array_filter($block['roles']) as $rid) {
        $query->values([
          $rid,
          $block['module'],
          $block['delta'],
        ]);
      }
      $query->execute();
    }

    if (array_key_exists('node_types', $block)) {
      db_delete('block_node_type')
        ->condition('module', $block['module'])
        ->condition('delta', $block['delta'])
        ->execute();
      $query = db_insert('block_node_type')->fields(['module', 'delta', 'type']);
      foreach ($block['node_types'] as $type) {
        $query->values([
          $block['module'],
          $block['delta'],
          $type,
        ]);
        $query->execute();
      }
    }
  }
  catch (Exception $e) {
    $transaction->rollback();
    throw $e;
  }
}

/**
 * Deletes blocks.
 *
 * @param array $deltas
 *   The block IDs.
 */
function _pw_globals_delete_blocks($deltas) {
  db_delete('block_custom')
    ->condition('bid', $deltas, 'IN')
    ->execute();
  db_delete('block')
    ->condition('module', 'block')
    ->condition('delta', $deltas, 'IN')
    ->execute();
  db_delete('block_role')
    ->condition('module', 'block')
    ->condition('delta', $deltas, 'IN')
    ->execute();
}

/**
 * Adds a link to the main menu.
 *
 * @param string $path
 *   The link path.
 * @param string $title
 *   The link title.
 * @param int $weight
 *   The weight.
 * @param int $plid
 *   The (optional) parent item ID.
 *
 * @return int
 *   The mlid of the saved menu link, or FALSE if the menu link could not be
 *   saved.
 */
function _pw_globals_menu_link_add($path, $title, $weight, $menu_name, $plid = 0) {
  $item = [
    'link_path' => drupal_lookup_path('source', $path) ?: $path,
    'link_title' => $title,
    'menu_name' => $menu_name,
    'weight' => $weight,
    'expanded' => TRUE,
    'plid' => $plid,
  ];
  return menu_link_save($item);
}
