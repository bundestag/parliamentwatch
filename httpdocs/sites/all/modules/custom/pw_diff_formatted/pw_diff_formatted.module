<?php

/* 
 * @File
 * Contains tokens for the user diff module
 */

/**
 * Implements hook_token_info().
 */
function pw_diff_formatted_token_info() {
  $user['pw_diff'] = array(
    'name' => t('Latest differences (Formatted)'),
    'description' => t('The differences between the current revision and the previous revision of this user. (With better formatting)'),
  );

  return array(
    'tokens' => array('user' => $user),
  );
}

/**
 * Implements hook_tokens().
 */
function pw_diff_formatted_tokens($type, $tokens, array $data = array(), array $options = array()) {
  $sanitize = !empty($options['sanitize']);

  $replacements = array();

  if ($type == 'user' && !empty($data['user'])) {
    $user = $data['user'];
    foreach ($tokens as $name => $original) {
      switch ($name) {
        // Basic diff standard comparison information.
        case 'pw_diff':
          $revisions = user_revision_list($user);
          if (count($revisions) == 1) {
            $replacements[$original] = t('(No previous revision available.)');
          }
          else {
            module_load_include('inc', 'diff', 'diff.pages');
            $old_vid = _diff_get_previous_vid($revisions, $user->vid);
            $state = $name == 'diff' ? 'raw' : 'raw_plain';
            $output = replacement_diffs_show($user, $old_vid, $user->vid, $state);

            $replacements[$original] = $sanitize ? check_plain($output) : $output;
          }
          break;

      }
    }
  }
  return $replacements;
}

function replacement_diffs_show($user, $old_vid, $new_vid) {
  module_load_include('inc', 'diff', 'diff.pages');
  module_load_include('inc', 'user_diff', 'user_diff.pages');
  module_load_include('inc', 'user_diff', 'user_diff.tokens');
  // Set same title as on the 'Revisions' tab for consistency
  drupal_set_title(t('Revisions for @name', array('@name' => $user->name)));

  $user_revisions = user_revision_list($user);
  $old_user = user_revision_load($user->uid, $old_vid);
  $new_user = user_revision_load($user->uid, $new_vid);
  // Generate table header (date, username, logmessage).
  $old_header = t('!date by !username', array(
    '!date' => l(format_date($old_user->revision_timestamp), "user/$user->uid/revisions/$old_user->vid/view"),
    '!username' => theme('username', array('account' => $user_revisions[$old_vid])),
  ));
  $new_header = t('!date by !username', array(
    '!date' => l(format_date($new_user->revision_timestamp), "user/$user->uid/revisions/$new_user->vid/view"),
    '!username' => theme('username', array('account' => $user_revisions[$new_vid])),
  ));

  $old_log = $old_user->log != '' ? '<p class="revision-log">'. filter_xss($old_user->log) .'</p>' : '';
  $new_log = $new_user->log != '' ? '<p class="revision-log">'. filter_xss($new_user->log) .'</p>' : '';

  // Generate previous diff/next diff links.
  $next_vid = _diff_get_next_vid($user_revisions, $new_vid);
  if ($next_vid) {
    $next_link = l(t('next diff >'), 'user/'. $user->uid .'/revisions/view/'. $new_vid .'/'. $next_vid);
  }
  else {
    $next_link = '';
  }
  $prev_vid = _diff_get_previous_vid($user_revisions, $old_vid);
  if ($prev_vid) {
    $prev_link = l(t('< previous diff'), 'user/'. $user->uid .'/revisions/view/'. $prev_vid .'/'. $old_vid);
  }
  else {
    $prev_link = '';
  }

  $cols = _diff_default_cols();
  $header = _diff_default_header($old_header, $new_header);
  $rows = array();
  if ($old_log || $new_log) {
    $rows[] = array(
      array(
        'data' => $old_log,
        'colspan' => 2
      ),
      array(
        'data' => $new_log,
        'colspan' => 2
      )
    );
  }
  $rows[] = array(
    array(
      'data' => $prev_link,
      'class' => array('diff-prevlink'),
      'colspan' => 2
    ),
    array(
      'data' => $next_link,
      'class' => array('diff-nextlink'),
      'colspan' => 2
    )
  );
  
  foreach (_user_diff_body_rows($old_user, $new_user) as $row) {
      
      array_push($rows, $row);
      
      if($row[1] != null) {
        $empty[0]['data'] = '';
        $empty[0]['colspan'] = 4;
        array_push($rows, $empty);
      }      
  }
  
  $output = theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => array('class' => array('diff')), 'cols' => $cols));

  if ($user->vid == $new_vid) {
    $output .= '<div class="diff-section-title">'. t('Current revision:') .'</div>';
  }
  else {
    $output .= '<div class="diff-section-title">'. t('Revision of !new_date:', array('!new_date' => format_date($new_user->revision_timestamp))) .'</div>';
  }
  // Don't include node links (final argument) when viewing the diff.
  $user_view = user_view($new_user, 'full');
  $output .= drupal_render($user_view);
  return $output;
}

