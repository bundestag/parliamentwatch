<?php

/**
 * @file
 * Update hooks for pw_sidejobs module
 */


/**
 * Update all sidejobs with no classification: these sidejobs should not
 * have an "Income interval" set.
 *
 */
function pw_sidejobs_update_7001(&$sandbox) {
  if (!isset($sandbox['progress'])) {

    // The count of sidejobs updated so far.
    $sandbox['progress'] = 0;

    // Total nodes that must be visited.
    $query = db_select('node', 'n')
      ->condition('n.type', 'sidejob');

    $query->leftJoin('field_data_field_sidejob_classification', 'cl', 'cl.entity_id = n.nid AND cl.bundle = n.type');
    $query->isNull('cl.field_sidejob_classification_value');

    $query->join('field_data_field_sidejob_income_interval', 'i', 'i.entity_id = n.nid AND i.bundle = n.type');
    $query->condition('i.field_sidejob_income_interval_value', '0');

    $query->addField('n', 'nid');
    $query->orderBy('n.nid', 'DESC');

    $query = $query->execute();
    $result = $query->fetchAllAssoc('nid');
    $sandbox['max'] = count($result);

    // Last node read via the query.
    $sandbox['current_node'] = -1;
  }


  // Collect the sidejobs for the batch starting with the nid of the last
  // sidejob and with a limit.
  $limit = 50;
  $query = db_select('node', 'n')
    ->condition('n.type', 'sidejob')
    ->condition('n.nid', $sandbox['current_node'], '>');
  $query->leftJoin('field_data_field_sidejob_classification', 'cl', 'cl.entity_id = n.nid AND cl.bundle = n.type');
  $query->isNull('cl.field_sidejob_classification_value');
  $query->join('field_data_field_sidejob_income_interval', 'i', 'i.entity_id = n.nid AND i.bundle = n.type');
  $query->condition('i.field_sidejob_income_interval_value', '0');
  $query->addField('n', 'nid');
  $query->orderBy('n.nid', 'ASC');
  $query->range(0, $limit);
  $query = $query->execute();
  $result = $query->fetchAllAssoc('nid');

  $sidejobs_in_batch = node_load_multiple(array_keys($result));

  // unset the value for income interval for each sidejob which has one
  foreach ($sidejobs_in_batch as $sidejob_node) {
    $sidejob_node->field_sidejob_income_interval = array();
    node_save($sidejob_node);

    // update the batch process information
    $sandbox['progress']++;
    $sandbox['current_node'] = $sidejob_node->nid;
  }

  $sandbox['#finished'] = $sandbox['progress'] >= $sandbox['max'] ? TRUE : $sandbox['progress'] / $sandbox['max'];

}