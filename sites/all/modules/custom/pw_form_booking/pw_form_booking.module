<?php
/**
 * @file
 * helper functions for booking form.
 */

/**
 * Implements hook_form_alter()..
 */
function pw_form_booking_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'webform_client_form_10482') {

    // load user
    $user_uuid = $form['submitted']['user_uuid']['#value'];
    $user = entity_uuid_load('user', array($user_uuid), array(), TRUE);
    $user = array_pop($user);

    // fill fields
    if (isset($user->field_user_parliament['und'][0]['tid'])) {
      $parliament_uuid = $user->field_user_parliament['und'][0]['tid'];
      $parliament_term = entity_uuid_load('taxonomy_term', array($parliament_uuid), array(), TRUE);
      $parliament = array_pop($parliament_term);
      $form['submitted']['user_parliament']['#value'] = $parliament->name;
      $form['submitted']['preis']['#value'] = $parliament->field_premium_profile_price['und'][0]['value'];
    }
    $form['submitted']['greeting']['#markup'] = str_replace("%premium_profile_price%", $form['submitted']['preis']['#value'], $form['submitted']['greeting']['#markup']);
    if (isset($user->field_user_constituency['und'][0]['tid'])) {
      $constituency_uuid = $user->field_user_constituency['und'][0]['tid'];
      $constituency_term = entity_uuid_load('taxonomy_term', array($constituency_uuid), array(), TRUE);
      $constituency = array_pop($constituency_term);
      $form['submitted']['user_constituency']['#value'] = $constituency->name;
    }
    if (isset($user->field_user_party['und'][0]['tid'])) {
      $party_uuid = $user->field_user_party['und'][0]['tid'];
      $party_term = entity_uuid_load('taxonomy_term', array($party_uuid), array(), TRUE);
      $party = array_pop($party_term);
      $form['submitted']['user_party']['#value'] = $party->name;

    }
    if (isset($user->field_user_gender['und'][0]['value'])) {
      $form['submitted']['user_prefix']['#default_value'] = $user->field_user_gender['und'][0]['value'] == 'f' ? 'mrs' : 'mr';
    }
    $form['submitted']['user_first_name']['#default_value'] = $user->field_user_fname['und'][0]['value'];
    $form['submitted']['user_last_name']['#default_value'] = $user->field_user_lname['und'][0]['value'];
    $form['submitted']['user_email']['#default_value'] = $user->mail;
    $form['submitted']['user_phone']['#default_value'] = $user->field_user_phone['und'][0]['value'] != 'k.A.' ? $user->field_user_phone['und'][0]['value'] : '';
    $form['submitted']['user_address_street']['#default_value'] = $user->field_user_address['und'][0]['thoroughfare'];
    $form['submitted']['user_address_postal_code']['#default_value'] = $user->field_user_address['und'][0]['postal_code'] != 'k.A.' ? $user->field_user_address['und'][0]['postal_code'] : '';
    $form['submitted']['user_address_city']['#default_value'] = $user->field_user_address['und'][0]['locality'] != 'k.A.' ? $user->field_user_address['und'][0]['locality'] : '';
  }
}

/**
 * Implements hook_form_alter()..
 */
function pw_form_booking_webform_submission_presave($node, &$submission) {
  if ($node->nid == 10482 && $submission->data[23]['value'][0] == 'sepa_direct_debit') {

    // give user role Premium User if profile extension was booked via direct debit
    global $user;
    $role_premium = 'Premium User';
    $is_politician = array_search('Politician', $user->roles) ? TRUE : FALSE;
    $is_candidate = array_search('Candidate', $user->roles) ? TRUE : FALSE;
    $has_premium = array_search($role_premium, $user->roles) ? TRUE : FALSE;
    if ($is_politician && $is_candidate && !$has_premium) {
      $system_roles = user_roles(TRUE);
      $rid = array_search($role_premium, $system_roles);
      $new_role[$rid] = $role_premium;
      $new_roles = $user->roles + $new_role;
      $user->revision = 0;
      user_save($user, array('roles' => $new_roles));
    }
  }
}

function pw_form_booking_menu() {
  return array(
    'user/%/booking_form' => array(
      'title' => 'Profilerweiterung buchen',
      'page callback' => 'pw_form_booking_page',
      'page arguments' => array(1),
      'access callback' => 'pw_form_booking_access',
      'access arguments' => array(1),
      'type' => MENU_LOCAL_TASK,
    ),
  );
}

// Show the page
function pw_form_booking_page($uid) {
  $node = node_view(node_load(10482));
  return array(
    'content' => array(
      'node' => $node,
    ),
  );
}

// Check if user has permission, or views its own page
function pw_form_booking_access($uid) {
  global $user;
  $is_current_user = $user->uid == $uid;
  $is_candidate = array_search('Candidate', $user->roles);
  $has_premium_role = array_search('Premium User', $user->roles);
  return $is_current_user && $is_candidate && !$has_premium_role;
}

// Define permission for administrators
function pw_form_booking_perm() {
  return array(
    'view user tabs' => array(
      'title' => t('View user tabs'),
      'description' => t('View user tabs'),
    ),
  );
}
