<?php

/**
 * @file
 * Update functions for the pw_globals module.
 */

/**
 * Disable obsolete modules.
 */
function pw_globals_update_7001() {
  $uninstall = [
    'block_class',
    'block_titlelink',
    'colorbox',
    'content_menu',
    'context',
    'custom_search',
    'date_views',
    'delta',
    'delta_blocks',
    'drulenium',
    'drulenium_visual_regression',
    'ds',
    'feedback_simple',
    'hms_field',
    'jcarousel',
    'lazyloader',
    'menu_attributes',
    'oauth_common',
    'omega_tools',
    'pw_announcements',
    'pw_calendar_entries',
    'pw_cron_first_letter',
    'pw_dialogues_view',
    'pw_filters_form',
    'pw_menu',
    'pw_profile_extender',
    'pw_profileswitch',
    'pw_slider',
    'pw_subsite',
    'pw_twitter',
    'pw_user_revision_switch',
    'quicktabs',
    'rdf',
    'schemaorg',
    'scroll_to_top',
    'sharethis',
    'submenutree',
    'tb_megamenu',
    'text_resize',
    'tvi',
    'twitter',
    'views_slideshow',
  ];

  module_disable($uninstall);
  drupal_uninstall_modules($uninstall);
}

/**
 * Switch admin theme to Seven.
 */
function pw_globals_update_7002() {
  theme_enable(['seven']);
  theme_disable(['pw_seven']);
  variable_set('admin_theme', 'seven');
}

/**
 * Add main menu blocks.
 */
function pw_globals_update_7003() {
  $block_1 = [
    'weight' => 0,
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'pages' => '',
    'cache' => DRUPAL_NO_CACHE,
    'title' => '<none>',
    'regions' => ['parliamentwatch' => 'header_top'],
  ];
  $config_1 = [
    'admin_title' => '',
    'depth' => 1,
    'depth_relative' => 0,
    'expanded' => 0,
    'follow' => 0,
    'level' => 1,
    'parent' => 'main-menu:0',
    'sort' => FALSE,
    'title_link' => FALSE,
  ];
  _pw_globals_add_menu_block($block_1, $config_1);
  $block_2 = [
    'weight' => 1,
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'pages' => '',
    'cache' => DRUPAL_NO_CACHE,
    'title' => '<none>',
    'regions' => ['parliamentwatch' => 'header_bottom'],
  ];
  $config_2 = [
    'admin_title' => '',
    'depth' => 1,
    'depth_relative' => 0,
    'expanded' => 0,
    'follow' => 0,
    'level' => 2,
    'parent' => 'main-menu:0',
    'sort' => 0,
    'title_link' => 0,
  ];
  _pw_globals_add_menu_block($block_2, $config_2);
}

/**
 * Add intro block for blog.
 */
function pw_globals_update_7004() {
  module_load_include('inc', 'block', 'block.admin');

  $body = <<<EOD
<div class="intro__left">
	<p>Unser Blog ist – wie das Gesamtprojekt "abgeordnetenwatch.de" – überparteilich. Politikerinnen und Politiker werden nicht aufgrund ihrer Parteizugehörigkeit bevorzugt, benachteiligt, kritisiert oder hervorgehoben. Der Blog versteht sich als ergänzende Diskussionsplattform zum Angebot von abgeordnetenwatch.de. Er berichtet über das Projekt und Themen wie Transparenz, Bürgernähe, Teilhabe in der Politik und Informationsfreit und nimmt hierzu Stellung.</p>
	<p>Alle Leserinnen und Leser sind eingeladen an der Diskussion teilzunehmen. Die Blogautoren selbst sind Mitglieder des abgeordnetenwatch.de-Teams. Ihre Einträge drücken nicht unbedingt die Position des Gesamtprojekts abgeordnetenwatch.de aus. </p>
</div>
<div class="intro__right">
  <img src="/sites/all/themes/custom/parliamentwatch/images/temp_tagcloud.png">
</div>
EOD;

  $block = [
    'info' => t('Blog intro'),
    'body' => [
      'format' => 'full_html',
      'value' => $body
    ],
    'module' => 'block',
    'weight' => 0,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'blog',
    'cache' => DRUPAL_CACHE_PER_ROLE,
    'title' => '',
    'regions' => ['parliamentwatch' => 'intro_primary'],
  ];
  $block['delta'] = db_insert('block_custom')
    ->fields(array(
      'info' => $block['info'],
      'body' => $block['body']['value'],
      'format' => $block['body']['format'],
    ))
    ->execute();
  _pw_globals_configure_block($block);
}

/**
 * Configure petition intro block.
 */
function pw_globals_update_7005() {
  $block = block_custom_block_get(27);
  $edit['info'] = $block['info'];
  $edit['body']['format'] = $block['format'];
  $edit['body']['value'] = <<<EOD
<div class="intro intro--rtl intro--petition">
    <div class="intro__right mh-item">
        <img src="/sites/all/themes/custom/parliamentwatch/images/logo-petition-plus.svg" alt="PetitionPlus">
    </div>
    <div class="intro__left mh-item">
        <p>Hier finden Sie durch unsere Redaktion ausgewählte Petitionen von offenen Petitionsplattformen wie Change.org. Sobald eine dieser Petitionen 100.000 Unterschriften erreicht (Schritt 1), werden wir durch eine repräsentative Meinungsumfrage ermitteln, ob das Anliegen eine Mehrheit in der Bevölkerung genießt (Schritt 2). Sollte dies der Fall sein, werden wir sämtliche Abgeordnete des jeweiligen Parlaments dazu Stellung nehmen lassen (Schritt 3). Die Positionierung der Abgeordneten wird im jeweiligen Abgeordnetenprofil archiviert und könnte damit zum Wieder- oder Abwahlkritierium werden. Außerdem finden Sie hier auch eigene Petitionen zu unseren Kernthemen, zu denen es allerdings keine Umfragen und Abfragen im Parlament gibt. Sollten Sie Fragen oder Feedback zu PetitionPlus haben, nutzen Sie bitte unser <a href="/feedback" target="_blank">Feedback-Formular</a>.</p>
    </div>

    <h3>So erreicht eine Petition das Parlament</h3>

    <ul class="petition__steps">
        <li class="petition__steps__item">
            <span>1. </span><i class="icon icon-signing"></i>
            <p>Petition erreicht die<br>Mindestunterschriftenzahl</p>
        </li>
        <li class="petition__steps__item">
            <span>2. </span><i class="icon icon-microphone"></i>
            <p>Mehrheit für die Petition in der<br>Meinungsumfrage</p>
        </li>
        <li class="petition__steps__item">
            <span>3. </span><i class="icon icon-politician"></i>
            <p>Abfrage der Petition im<br>Parlament</p>
        </li>
        <li class="petition__steps__item">
            <a href="https://www.youtube.com/watch?v=hXWDQPR4HdQ" target="_blank">
                <img src="http://img.youtube.com/vi/hXWDQPR4HdQ/mqdefault.jpg" alt="">
                <i class="icon icon-youtube-play"></i>
                <span>PetitionPlus<br> kurz erklärt</span>
            </a>
        </li>
    </ul>
</div>
EOD;
  block_block_save(27, $edit);
  $config = [
    'module' => 'block',
    'delta' => '27',
    'weight' => -20,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => "petitions\npetitions/*",
    'cache' => DRUPAL_CACHE_PER_ROLE,
    'title' => '<none>',
    'regions' => ['parliamentwatch' => 'content'],
  ];
  _pw_globals_configure_block($config);
}

/**
 * Configure related blog posts block.
 */
function pw_globals_update_7006() {
  $block = [
    'module' => 'pw_blog',
    'delta' => 'related_blogposts',
    'weight' => 0,
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'pages' => '',
    'cache' => DRUPAL_CACHE_PER_PAGE | DRUPAL_CACHE_PER_ROLE,
    'title' => '',
    'regions' => ['parliamentwatch' => 'content_tabs'],
    'node_types' => ['blogpost']
  ];
  _pw_globals_configure_block($block);
}

/**
 * Configure comments block.
 */
function pw_globals_update_7007() {
  $block = [
    'module' => 'pw_globals',
    'delta' => 'comments',
    'weight' => 0,
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'pages' => '',
    'cache' => DRUPAL_CACHE_PER_PAGE | DRUPAL_CACHE_PER_ROLE,
    'title' => '',
    'regions' => ['parliamentwatch' => 'content_extra'],
    'node_types' => ['blogpost', 'poll'],
  ];
  _pw_globals_configure_block($block);
}

/**
 * Configure profile tabs.
 */
function pw_globals_update_7008() {
  $weight = -1;
  $pw_dialogues = [
    'module' => 'pw_dialogues',
    'delta' => 'profile',
    'weight' => ++$weight,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => "profile/*",
    'cache' => DRUPAL_NO_CACHE,
    'title' => '',
    'regions' => ['parliamentwatch' => 'content_tabs'],
  ];
  _pw_globals_configure_block($pw_dialogues);
  $pw_vote = [
    'module' => 'pw_vote',
    'delta' => 'profile',
    'weight' => ++$weight,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => "profile/*",
    'cache' => DRUPAL_NO_CACHE,
    'title' => '',
    'regions' => ['parliamentwatch' => 'content_tabs'],
  ];
  _pw_globals_configure_block($pw_vote);
}

/**
 * Configure title block.
 */
function pw_globals_update_7009() {
  $block = [
    'module' => 'pw_globals',
    'delta' => 'title',
    'weight' => -1,
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'pages' => "blog/*\n*/abstimmungen/*\nprofile/*\ntaxonomy/term/*",
    'cache' => DRUPAL_CACHE_PER_PAGE | DRUPAL_CACHE_PER_ROLE,
    'title' => '',
    'regions' => ['parliamentwatch' => 'intro_primary'],
  ];
  _pw_globals_configure_block($block);
}

/**
 * Configure parliament blocks.
 */
function pw_globals_update_7010() {
  $weight = 9;
  $pw_globals_search = [
    'module' => 'pw_globals',
    'delta' => 'politician_search_form',
    'weight' => ++$weight,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'taxonomy/term/*',
    'cache' => DRUPAL_CACHE_PER_PAGE | DRUPAL_CACHE_PER_ROLE,
    'title' => '',
    'regions' => ['parliamentwatch' => 'content'],
  ];
  _pw_globals_configure_block($pw_globals_search);

  $block = block_custom_block_get(164);
  $edit['info'] = t('Campaign');
  $edit['body']['format'] = $block['format'];
  $edit['body']['value'] = <<<EOD
<div class="donate-teaser">
  <p>Unseren <span id="mscount"><?php print variable_get('pw_globals_supporters', 0); ?></span> Förderern stehen 6.000 Lobbyisten in Berlin gegenüber. <br> Mit Ihrer Hilfe wollen wir geheimen Lobbyismus stoppen – sind Sie dabei?</p>
  <a href="/ueber-uns/spendenformular?recurring=1&pk_campaign=4000Foerderer&pk_kwd=Header" class="btn">Jetzt fördern</a>
</div>
EOD;
  block_block_save(164, $edit);
  $config = [
    'module' => 'block',
    'delta' => 164,
    'weight' => ++$weight,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => "taxonomy/term/*",
    'cache' => DRUPAL_CACHE_PER_ROLE,
    'title' => '<none>',
    'regions' => ['parliamentwatch' => 'content'],
  ];
  _pw_globals_configure_block($config);


  $pw_blog_recent = [
    'module' => 'pw_blog',
    'delta' => 'recent_blogposts',
    'weight' => ++$weight,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'bundestag',
    'cache' => DRUPAL_CACHE_PER_PAGE | DRUPAL_CACHE_PER_ROLE,
    'title' => '',
    'regions' => ['parliamentwatch' => 'content'],
  ];
  _pw_globals_configure_block($pw_blog_recent);

  $pw_poll_recent = [
    'module' => 'pw_poll',
    'delta' => 'recent',
    'weight' => ++$weight,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'taxonomy/term/*',
    'cache' => DRUPAL_CACHE_PER_PAGE | DRUPAL_CACHE_PER_ROLE,
    'title' => '',
    'regions' => ['parliamentwatch' => 'content'],
  ];
  _pw_globals_configure_block($pw_poll_recent);

  $pw_dialogues_recent = [
    'module' => 'pw_dialogues',
    'delta' => 'recent',
    'weight' => ++$weight,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'taxonomy/term/*',
    'cache' => DRUPAL_CACHE_PER_PAGE | DRUPAL_CACHE_PER_ROLE,
    'title' => '',
    'regions' => ['parliamentwatch' => 'content'],
  ];
  _pw_globals_configure_block($pw_dialogues_recent);
}

/**
 * Configure poll blocks.
 */
function pw_globals_update_7011() {
  $weight = -20;

  $pw_poll_intro = [
    'module' => 'pw_poll',
    'delta' => 'intro',
    'weight' => ++$weight,
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'pages' => '',
    'cache' => DRUPAL_CACHE_PER_PAGE | DRUPAL_CACHE_PER_ROLE,
    'title' => '',
    'regions' => ['parliamentwatch' => 'intro_primary'],
    'node_types' => ['poll'],
  ];
  _pw_globals_configure_block($pw_poll_intro);

  $pw_poll_charts = [
    'module' => 'pw_poll',
    'delta' => 'charts',
    'weight' => ++$weight,
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'pages' => 'eu/abstimmungen/*',
    'cache' => DRUPAL_CACHE_PER_PAGE | DRUPAL_CACHE_PER_ROLE,
    'title' => '',
    'regions' => ['parliamentwatch' => 'content'],
    'node_types' => ['poll'],
  ];
  _pw_globals_configure_block($pw_poll_charts);

  $pw_poll_timeline = [
    'module' => 'pw_poll',
    'delta' => 'timeline',
    'weight' => ++$weight,
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'pages' => '',
    'cache' => DRUPAL_CACHE_PER_PAGE | DRUPAL_CACHE_PER_ROLE,
    'title' => '',
    'regions' => ['parliamentwatch' => 'content'],
    'node_types' => ['poll'],
  ];
  _pw_globals_configure_block($pw_poll_timeline);

  $pw_poll_related = [
    'module' => 'pw_poll',
    'delta' => 'related',
    'weight' => $weight + 10,
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'pages' => '',
    'cache' => DRUPAL_CACHE_PER_PAGE | DRUPAL_CACHE_PER_ROLE,
    'title' => '',
    'regions' => ['parliamentwatch' => 'content'],
    'node_types' => ['poll'],
  ];
  _pw_globals_configure_block($pw_poll_related);
}

/**
 * Delete obsolete custom blocks.
 */
function pw_globals_update_7012() {
  $q = db_select('block', 'b')
    ->fields('b', ['delta'])
    ->condition('module', 'block')
    ->condition('theme', 'parliamentwatch')
    ->condition('region', BLOCK_REGION_NONE);
  _pw_globals_delete_blocks($q->execute()->fetchCol());
  _pw_globals_delete_blocks([
    2,
    9,
    10,
    12,
    20,
    35,
    42,
    44,
    51,
    52,
    53,
    65,
    66,
    67,
    70,
    74,
    80,
    83,
    93,
    94,
    119,
    123,
    128,
    137,
    138,
    141,
    144,
    145,
    166,
    167,
  ]);
}

/**
 * Update aliases.
 */
function pw_globals_update_7013() {
  $updates = [
    'petitionen' => 'petitions',
    'eu/profile/kandidierende' => 'profiles/16117/candidates',
    'eu/profile' => 'profiles/16117/deputies',
    'eu/abstimmungen' => 'polls/16117',
    'eu/petitionen' => 'petitions/16117',
    'eu/wahlprogramme' => 'election-manifestos/16117',
    'bundestag/profile' => 'profiles/26909/candidates',
    'bundestag/petitionen' => 'petitions/26909',
    'bundestag/wahlprogramme' => 'election-manifestos/26909',
    'baden-wuerttemberg/profile' => 'profiles/21316/candidates',
    'bayern/wahlprogramme' => 'election-manifestos/16285',
    'berlin/profile' => 'profiles/23273/candidates',
    'berlin/wahlprogramme' => 'election-manifestos/23273',
    'brandenburg/profile' => 'profiles/17180/deputies',
    'brandenburg/abstimmungen' => 'polls/17180',
    'brandenburg/wahlprogramme' => 'election-manifestos/17180',
    'bremen/profile' => 'profiles/18064/candidates',
    'bremen/wahlprogramme' => 'election-manifestos/18064',
    'hamburg/profile' => 'profiles/18030/deputies',
    'hamburg/wahlprogramme' => 'election-manifestos/18030',
    'hessen/wahlprogramme' => 'election-manifestos/16284',
    'mansfeld-sudharz/profile' => 'profiles/16986/candidates',
    'mecklenburg-vorpommern/profile' => 'profiles/23275/candidates',
    'mecklenburg-vorpommern/wahlprogramme' => 'election-manifestos/23275',
    'nordrhein-westfalen/profile' => 'profiles/23615/candidates',
    'nordrhein-westfalen/wahlprogramme' => 'election-manifestos/23615',
    'oberbürgermeisterwahl%20nrw/profile' => 'profiles/16255/candidates',
    'rheinland-pfalz/profile' => 'profiles/21393/candidates',
    'sachsen/profile' => 'profiles/17178/deputies',
    'sachsen/wahlprogramme' => 'election-manifestos/17178',
    'schleswig-holstein/profile' => 'profiles/23616/candidates',
    'schleswig-holstein/wahlprogramme' => 'election-manifestos/23616',
    'thueringen/profile' => 'profiles/17179/deputies',
    'thueringen/abstimmungen' => 'polls/17179',
    'thueringen/wahlprogramme' => 'election-manifestos/17179',
    'ueber-uns' => 'info',
    'wuppertal/profile' => 'profiles/16985/candidates',
  ];

  foreach ($updates as $alias => $source) {
    $path = path_load(['alias' => $alias]);

    if ($path) {
      $path['source'] = $source;
      path_save($path);
    }
  }
}

/**
 * Set variable parliamentwatch_state_parliament_tids.
 */
function pw_globals_update_7014() {
  variable_set('parliamentwatch_state_parliament_tids', [
    21316,
    16285,
    23273,
    17180,
    18064,
    18030,
    16284,
    23275,
    16282,
    23615,
    21393,
    16278,
    17178,
    16266,
    23616,
    17179,
  ]);
}

/**
 * Add links to main menu.
 */
function pw_globals_update_7015() {
  menu_delete_links('main-menu');

  $state_parliament_terms = taxonomy_term_load_multiple(variable_get('parliamentwatch_state_parliament_tids', []));
  $weight = 0;

  _pw_globals_menu_parliament_tree_add('bundestag', 'Bundestag', $weight++);
  foreach ($state_parliament_terms as $term) {
    _pw_globals_menu_parliament_tree_add(drupal_lookup_path('alias', "taxonomy/term/$term->tid"), $term->name, $weight++);
  }
  _pw_globals_menu_parliament_tree_add('eu', 'EU', $weight++, 'main-menu');
  _pw_globals_menu_link_add('blog', 'Blog', $weight++, 'main-menu');
  _pw_globals_menu_link_add('info', 'Über uns', $weight++, 'main-menu');
}

/**
 * Add info menu.
 */
function pw_globals_update_7016() {
  menu_save(['menu_name' => 'info-menu', 'title' => 'Info-Menü', 'description' => 'Das <em>Info-Menü</em> stellt die Navigationspunkte für den "Über Uns"-Bereich']);

  $weight = 0;

  $link_1 = _pw_globals_menu_link_add('node/7760', 'Zweck', $weight++, 'info-menu');
  _pw_globals_menu_link_add('node/7760', 'Zweck', $weight++, 'info-menu', $link_1);
  _pw_globals_menu_link_add('node/37990', 'Das Ziel', $weight++, 'info-menu', $link_1);
  _pw_globals_menu_link_add('node/37991', 'Der Weg', $weight++, 'info-menu', $link_1);
  _pw_globals_menu_link_add('node/40266', 'Erfolge', $weight++, 'info-menu', $link_1);

  $link_2 = _pw_globals_menu_link_add('node/7757', 'Finanzierung', $weight++, 'info-menu');
  _pw_globals_menu_link_add('node/7757', 'Finanzierung', $weight++, 'info-menu', $link_2);
  _pw_globals_menu_link_add('node/7759', 'Jahresbericht', $weight++, 'info-menu', $link_2);
  _pw_globals_menu_link_add('node/10508', 'Spenden', $weight++, 'info-menu', $link_2);
  _pw_globals_menu_link_add('node/39917', 'Förderer werden', $weight++, 'info-menu', $link_2);

  $link_3 = _pw_globals_menu_link_add('node/7751', 'Menschen', $weight++, 'info-menu');
  _pw_globals_menu_link_add('node/7751', 'Menschen', $weight++, 'info-menu', $link_3);
  _pw_globals_menu_link_add('node/7735', 'Kuratorium', $weight++, 'info-menu', $link_3);
  _pw_globals_menu_link_add('node/7748', 'Jobs', $weight++, 'info-menu', $link_3);
  _pw_globals_menu_link_add('node/6578', 'Kontakt', $weight++, 'info-menu', $link_3);
}

/**
 * Delete obsolete menus.
 */
function pw_globals_update_7017() {
  menu_delete(menu_load('devel'));
  menu_delete(menu_load('features'));
  menu_delete(menu_load('menu-main-menu-de'));
  menu_delete(menu_load('menu-meta-de'));
  menu_delete(menu_load('menu-support-us-de'));
  menu_delete(menu_load('menu-about-us-de'));
  menu_delete(menu_load('menu-elections-de'));
}

/**
 * Delete obsolete redirects.
 */
function pw_globals_update_7018() {
  redirect_delete(32872);
}

/**
 * Delete obsolete fields.
 */
function pw_globals_update_7019() {
  field_delete_field('drulenium_num_command_errors');
  field_delete_field('drulenium_num_command_failures');
  field_delete_field('drulenium_num_command_passes');
  field_delete_field('drulenium_num_test_failures');
  field_delete_field('drulenium_num_test_passes');
  field_delete_field('drulenium_num_test_total');
  field_delete_field('drulenium_result');
  field_delete_field('drulenium_revision');
  field_delete_field('drulenium_suite');
  field_delete_field('drulenium_total_time');
  field_delete_field('drulenium_version');
  field_delete_field('field_share_sum');
  field_delete_field('field_user_answers_give');
  field_delete_field('field_user_first_letter_lname');
  field_delete_field('field_user_questions_get');
  node_type_delete('calendar_entry');
  node_type_delete('pw_slider');
}

/**
 * Delete obsolete field groups.
 */
function pw_globals_update_7020() {
  db_delete('field_group')->condition('mode', 'form', '<>')->execute();
}

/**
 * Change node content for "Die Arbeit von abgeordnetenwatch.de unterstützen!".
 */
function pw_globals_update_7021() {
  $node = node_load(104846);

  $node->body[LANGUAGE_NONE][0]['value'] = <<<EOD
<div class="well__left">
<h3>Die Arbeit von abgeordnetenwatch.de unterstützen!</h3>
<p>
	Sie finden unsere Arbeit wichtig und möchten weitere Recherchen ermöglichen? Dann unterstützen Sie uns doch.
</p>
</div>
EOD;
  node_save($node);
}

/**
 * Set frontpage.
 */
function pw_globals_update_7022() {
  variable_set('site_frontpage', drupal_lookup_path('source', 'bundestag'));
}

/**
 * Delete calendar options menu.
 */
function pw_globals_update_7023() {
  menu_delete(menu_load('menu-calendar-options-menu'));
}

/**
 * Add media partner blocks for embedded (blank) version.
 */
function pw_globals_update_7024() {
  module_load_include('inc', 'block', 'block.admin');

  $body_affilliate_code_1 = <<<EOD
<link href="https://www.freiepresse.de/css/abgeordnetenwatch.css" rel="stylesheet" type="text/css" />
EOD;
  $block_affilliate_code_1 = [
    'info' => t('Medienpartner Freie Presse CSS'),
    'body' => [
      'format' => 'full_html',
      'value' => $body_affilliate_code_1
    ],
    'module' => 'block',
    'weight' => 0,
    'visibility' => BLOCK_VISIBILITY_PHP,
    'pages' => '<?php if ($_SERVER[\'SERVER_NAME\'] == "freiepresse.affiliate.abgeordnetenwatch.de") return true; ?>',
    'cache' => DRUPAL_CACHE_PER_ROLE,
    'title' => '',
    'regions' => ['blank' => 'pw_affilliate_code'],
  ];
  $block_affilliate_code_1['delta'] = db_insert('block_custom')
    ->fields(array(
      'info' => $block_affilliate_code_1['info'],
      'body' => $block_affilliate_code_1['body']['value'],
      'format' => $block_affilliate_code_1['body']['format'],
    ))
    ->execute();
  _pw_globals_configure_block($block_affilliate_code_1);

  $body_affilliate_code_2 = <<<EOD
<!-- Begin Sitestat4 code --><script language='JavaScript1.1' type='text/javascript'>
<!--
function sitestat(ns_l){ns_l+='&amp;ns__t='+(new Date()).getTime();ns_pixelUrl=ns_l;
ns_0=document.referrer;
ns_0=(ns_0.lastIndexOf('/')==ns_0.length-1)?ns_0.substring(ns_0.lastIndexOf('/'),0):ns_0;
if(ns_0.length>0)ns_l+='&amp;ns_referrer='+escape(ns_0);
if(document.images){ns_1=new Image();ns_1.src=ns_l;}else
document.write('<img src="'+ns_l+'" width="1" height="1" alt="">');}
sitestat("http://de.sitestat.com/cicero/freies-wort/s?ext_abgeordnetenwatch.index_phtm");
//-->
</script><noscript>
<img src="http://de.sitestat.com/cicero/freies-wort/s?ext_abgeordnetenwatch.index_phtm" width="1" height="1" alt="">
</noscript><!-- End Sitestat4 code -->
EOD;
  $block_affilliate_code_2 = [
    'info' => t('Medienpartner Freies Wort Tracking'),
    'body' => [
      'format' => 'full_html',
      'value' => $body_affilliate_code_2
    ],
    'module' => 'block',
    'weight' => 0,
    'visibility' => BLOCK_VISIBILITY_PHP,
    'pages' => '<?php if ($_SERVER[\'SERVER_NAME\'] == "freieswort.affiliate.abgeordnetenwatch.de") return true; ?>',
    'cache' => DRUPAL_CACHE_PER_ROLE,
    'title' => '',
    'regions' => ['blank' => 'pw_affilliate_code'],
  ];
  $block_affilliate_code_2['delta'] = db_insert('block_custom')
    ->fields(array(
      'info' => $block_affilliate_code_2['info'],
      'body' => $block_affilliate_code_2['body']['value'],
      'format' => $block_affilliate_code_2['body']['format'],
    ))
    ->execute();
  _pw_globals_configure_block($block_affilliate_code_2);

  $body_affilliate_code_3 = <<<EOD
<script type="text/javascript" src="https://script.ioam.de/iam.js"></script>
EOD;
  $block_affilliate_code_3 = [
    'info' => t('Medienpartner SVZ Tracking JS'),
    'body' => [
      'format' => 'full_html',
      'value' => $body_affilliate_code_3
    ],
    'module' => 'block',
    'weight' => 0,
    'visibility' => BLOCK_VISIBILITY_PHP,
    'pages' => '<?php if ($_SERVER[\'SERVER_NAME\'] == "svz.affiliate.abgeordnetenwatch.de") return true; ?>',
    'cache' => DRUPAL_CACHE_PER_ROLE,
    'title' => '',
    'regions' => ['blank' => 'pw_affilliate_code'],
  ];
  $block_affilliate_code_3['delta'] = db_insert('block_custom')
    ->fields(array(
      'info' => $block_affilliate_code_3['info'],
      'body' => $block_affilliate_code_3['body']['value'],
      'format' => $block_affilliate_code_3['body']['format'],
    ))
    ->execute();
  _pw_globals_configure_block($block_affilliate_code_3);

  $body_affilliate_code_4 = <<<EOD
<!-- ## IVW SZMnG - KAT 2.0 --><script type="text/javascript"
src="https://script.ioam.de/iam.js"></script>
EOD;
  $block_affilliate_code_4 = [
    'info' => t('Medienpartner Zeitungsgruppe Thüringen Tracking head'),
    'body' => [
      'format' => 'full_html',
      'value' => $body_affilliate_code_4
    ],
    'module' => 'block',
    'weight' => 0,
    'visibility' => BLOCK_VISIBILITY_PHP,
    'pages' => '<?php if ($_SERVER[\'SERVER_NAME\'] == "zgt.affiliate.abgeordnetenwatch.de") return true; ?>',
    'cache' => DRUPAL_CACHE_PER_ROLE,
    'title' => '',
    'regions' => ['blank' => 'pw_affilliate_code'],
  ];
  $block_affilliate_code_4['delta'] = db_insert('block_custom')
    ->fields(array(
      'info' => $block_affilliate_code_4['info'],
      'body' => $block_affilliate_code_4['body']['value'],
      'format' => $block_affilliate_code_4['body']['format'],
    ))
    ->execute();
  _pw_globals_configure_block($block_affilliate_code_4);


  $body_affilliate_tracking_1 = <<<EOD
EOD;
  $block_affilliate_tracking_1 = [
    'info' => t('Medienpartner Hamburger Abendblatt Tracking'),
    'body' => [
      'format' => 'full_html',
      'value' => $body_affilliate_tracking_1
    ],
    'module' => 'block',
    'weight' => 0,
    'visibility' => BLOCK_VISIBILITY_PHP,
    'pages' => '<?php if ($_SERVER[\'SERVER_NAME\'] == "abendblatt.affiliate.abgeordnetenwatch.de") return true; ?>',
    'cache' => DRUPAL_CACHE_PER_ROLE,
    'title' => '',
    'regions' => ['blank' => 'pw_tracking'],
  ];
  $block_affilliate_tracking_1['delta'] = db_insert('block_custom')
    ->fields(array(
      'info' => $block_affilliate_tracking_1['info'],
      'body' => $block_affilliate_tracking_1['body']['value'],
      'format' => $block_affilliate_tracking_1['body']['format'],
    ))
    ->execute();
  _pw_globals_configure_block($block_affilliate_tracking_1);

  $body_affilliate_tracking_2 = <<<EOD
<!-- SZM VERSION="2.0" -->
<script type="text/javascript">
var iam_data =
{ "st":"svz", "cp":"abgeordnetenwatch", "sv":"in", "co":"" }

iom.c(iam_data);
</script>
<!--/SZM -->
EOD;
  $block_affilliate_tracking_2 = [
    'info' => t('Medienpartner SVZ Tracking Code'),
    'body' => [
      'format' => 'full_html',
      'value' => $body_affilliate_tracking_2
    ],
    'module' => 'block',
    'weight' => 0,
    'visibility' => BLOCK_VISIBILITY_PHP,
    'pages' => '<?php if ($_SERVER[\'SERVER_NAME\'] == "svz.affiliate.abgeordnetenwatch.de") return true; ?>',
    'cache' => DRUPAL_CACHE_PER_ROLE,
    'title' => '',
    'regions' => ['blank' => 'pw_tracking'],
  ];
  $block_affilliate_tracking_2['delta'] = db_insert('block_custom')
    ->fields(array(
      'info' => $block_affilliate_tracking_2['info'],
      'body' => $block_affilliate_tracking_2['body']['value'],
      'format' => $block_affilliate_tracking_2['body']['format'],
    ))
    ->execute();
  _pw_globals_configure_block($block_affilliate_tracking_2);

  $body_affilliate_tracking_3 = <<<EOD
<!--## IVW Script SZMnG - KAT 2.0 --><script type="text/javascript">

        /* <![CDATA[ */
                ## IVW-Code (Seitenname)

                var code = abgeordnetenwatch Portalseite;

                // check auf startseite für FRABO/AGOF

                var survey = (code.toLowerCase().indexOf("home") != -1) ? "ke" : "in";
                var iam_data = {
                    "mg": "yes", // Migrationsmodus AKTIVIERT
                    "st": "zgtonlin", // site/domain
                    "cp": code, // code SZMnG
                    "oc": code, // code SZM - System 1.5
                    "sv": survey // FRABO
                };

                iom.c(iam_data);
        /* ]]> */

</script>
EOD;
  $block_affilliate_tracking_3 = [
    'info' => t('Medienpartner ZGT Tracking Body Landingpage'),
    'body' => [
      'format' => 'full_html',
      'value' => $body_affilliate_tracking_3
    ],
    'module' => 'block',
    'weight' => 0,
    'visibility' => BLOCK_VISIBILITY_PHP,
    'pages' => '<?php $landingpage = ($_SERVER[\'REQUEST_URI\'] == \'/thueringen\') ? true : false; if ($_SERVER[\'SERVER_NAME\'] == "zgt.affiliate.abgeordnetenwatch.de" && $landingpage) return true; ?>',
    'cache' => DRUPAL_CACHE_PER_ROLE,
    'title' => '',
    'regions' => ['blank' => 'pw_tracking'],
  ];
  $block_affilliate_tracking_3['delta'] = db_insert('block_custom')
    ->fields(array(
      'info' => $block_affilliate_tracking_3['info'],
      'body' => $block_affilliate_tracking_3['body']['value'],
      'format' => $block_affilliate_tracking_3['body']['format'],
    ))
    ->execute();
  _pw_globals_configure_block($block_affilliate_tracking_3);

  $body_affilliate_tracking_4 = <<<EOD
<!-- ## IVW Script SZMnG - KAT 2.0 --><script type="text/javascript">

        /* <![CDATA[ */

                ## IVW-Code (Seitenname)

                var code = abgeordnetenwatch Portalseite;

                // check auf startseite für FRABO/AGOF

                var survey = (code.toLowerCase().indexOf("home") != -1) ? "ke" : "in";
                var iam_data = {

                    "mg": "yes", // Migrationsmodus AKTIVIERT
                    "st": "zgtonlin", // site/domain
                    "cp": code, // code SZMnG
                    "oc": code, // code SZM - System 1.5
                    "sv": survey // FRABO
                };

                iom.c(iam_data);

        /* ]]> */

</script>
EOD;
  $block_affilliate_tracking_4 = [
    'info' => t('Medienpartner ZGT Tracking Body sonstige'),
    'body' => [
      'format' => 'full_html',
      'value' => $body_affilliate_tracking_4
    ],
    'module' => 'block',
    'weight' => 0,
    'visibility' => BLOCK_VISIBILITY_PHP,
    'pages' => '<?php $landingpage = ($_SERVER[\'REQUEST_URI\'] == \'/thueringen\') ? true : false; if ($_SERVER[\'SERVER_NAME\'] == "zgt.affiliate.abgeordnetenwatch.de" && !$landingpage) return true; ?>',
    'cache' => DRUPAL_CACHE_PER_ROLE,
    'title' => '',
    'regions' => ['blank' => 'pw_tracking'],
  ];
  $block_affilliate_tracking_4['delta'] = db_insert('block_custom')
    ->fields(array(
      'info' => $block_affilliate_tracking_4['info'],
      'body' => $block_affilliate_tracking_4['body']['value'],
      'format' => $block_affilliate_tracking_4['body']['format'],
    ))
    ->execute();
  _pw_globals_configure_block($block_affilliate_tracking_4);
}

/**
 * Assign blocks to renamed regions in blank theme.
 */
function pw_globals_update_7025() {
  foreach ([176, 177, 178, 179] as $delta) {
    $block = (array) block_load('block', $delta);
    $block['regions'] = ['blank' => 'assets'];
    _pw_globals_configure_block($block);
  }

  foreach ([180, 181, 182, 183] as $delta) {
    $block = (array) block_load('block', $delta);
    $block['regions'] = ['blank' => 'tracking'];
    _pw_globals_configure_block($block);
  }
}

/**
 * Enable blocks in blank theme.
 */
function pw_globals_update_7026() {
  $result = db_select('block', 'b')
    ->fields('b')
    ->condition('b.theme', 'parliamentwatch')
    ->condition('b.status', 1)
    ->execute();

  foreach ($result->fetchAll(PDO::FETCH_ASSOC) as $block) {
    $block['regions']['parliamentwatch'] = $block['region'];
    $block['regions']['blank'] = $block['region'];
    _pw_globals_configure_block($block);
  }
}

/**
 * Uninstall obsolete modules.
 */
function pw_globals_update_7027() {
  $uninstall = [
    'facetapi',
    'search_api_page',
  ];

  module_disable($uninstall);
  module_list(TRUE);
  drupal_uninstall_modules($uninstall);
}

/**
 * Add user-login to main-navigation.
 */
function pw_globals_update_7028() {
  _pw_globals_menu_link_add('user', 'Login', 30, 'main-menu');
}

/**
 * Configure title block.
 */
function pw_globals_update_7029() {
  $block = (array) block_load('pw_globals', 'title');
  $block['pages'] = "blog/*\n*/abstimmungen/*\nprofile/*";
  $block['regions'] = ['parliamentwatch' => 'intro_primary', 'blank' => 'intro_primary'];
  _pw_globals_configure_block($block);
}

/**
 * Adds a new menu block.
 *
 * @param array $block
 *   The basic block configuration.
 *
 * @param array $config
 *   The menu block configuration.
 */
function _pw_globals_add_menu_block($block, $config) {
  $block_ids = variable_get('menu_block_ids', array());
  $delta = empty($block_ids) ? 1 : max($block_ids) + 1;
  $block_ids[] = $delta;
  variable_set('menu_block_ids', $block_ids);
  $block['delta'] = $config['delta'] = $delta;
  $block['module'] = 'menu_block';
  menu_block_block_save($delta, $config);
  _pw_globals_configure_block($block);
}

/**
 * Configures a block.
 *
 * @param array $block
 *   The block configuration.
 */
function _pw_globals_configure_block($block) {
  $transaction = db_transaction();
  try {
    foreach (system_list('theme') as $theme) {
      if ($theme->status) {
        $block['regions'] += [$theme->name => BLOCK_REGION_NONE];
      }
    }

    foreach ($block['regions'] as $theme => $region) {
      db_merge('block')
        ->key(['theme' => $theme, 'delta' => $block['delta'], 'module' => $block['module']])
        ->fields([
          'region' => ($region == BLOCK_REGION_NONE ? '' : $region),
          'visibility' => (int) $block['visibility'],
          'pages' => trim($block['pages']),
          'status' => (int) ($region != BLOCK_REGION_NONE),
          'weight' => $block['weight'],
          'cache' => $block['cache'],
        ])
        ->execute();
    }

    if (array_key_exists('roles', $block)) {
      db_delete('block_role')
        ->condition('module', $block['module'])
        ->condition('delta', $block['delta'])
        ->execute();
      $query = db_insert('block_role')->fields(['rid', 'module', 'delta']);
      foreach (array_filter($block['roles']) as $rid) {
        $query->values([
          $rid,
          $block['module'],
          $block['delta'],
        ]);
      }
      $query->execute();
    }

    if (array_key_exists('node_types', $block)) {
      db_delete('block_node_type')
        ->condition('module', $block['module'])
        ->condition('delta', $block['delta'])
        ->execute();
      $query = db_insert('block_node_type')->fields(['module', 'delta', 'type']);
      foreach ($block['node_types'] as $type) {
        $query->values([
          $block['module'],
          $block['delta'],
          $type,
        ]);
        $query->execute();
      }
    }
  }
  catch (Exception $e) {
    $transaction->rollback();
    throw $e;
  }
}

/**
 * Deletes blocks.
 *
 * @param array $deltas
 *   The block IDs.
 */
function _pw_globals_delete_blocks($deltas) {
  db_delete('block_custom')
    ->condition('bid', $deltas, 'IN')
    ->execute();
  db_delete('block')
    ->condition('module', 'block')
    ->condition('delta', $deltas, 'IN')
    ->execute();
  db_delete('block_role')
    ->condition('module', 'block')
    ->condition('delta', $deltas, 'IN')
    ->execute();
}

/**
 * Adds a link to the main menu.
 *
 * @param string $path
 *   The link path.
 * @param string $title
 *   The link title.
 * @param int $weight
 *   The weight.
 * @param int $plid
 *   The (optional) parent item ID.
 *
 * @return int
 *   The mlid of the saved menu link, or FALSE if the menu link could not be
 *   saved.
 */
function _pw_globals_menu_link_add($path, $title, $weight, $menu_name, $plid = 0) {
  $item = [
    'link_path' => drupal_lookup_path('source', $path) ?: $path,
    'link_title' => $title,
    'menu_name' => $menu_name,
    'weight' => $weight,
    'expanded' => TRUE,
    'plid' => $plid,
  ];
  return menu_link_save($item);
}

/**
 * Adds parliament menu link and its tree to the main menu.
 *
 * @param string $path
 *   The link path.
 * @param string $title
 *   The link title.
 * @param int $weight
 *   The weight.
 *
 * @return int
 *   The mlid of the saved menu link, or FALSE if the menu link could not be
 *   saved.
 */
function _pw_globals_menu_parliament_tree_add($path, $title, $weight) {
  $sub_items = [
    'Abgeordnete' => 'profile',
    'Abstimmungen' => 'abstimmungen',
    'Wahlrecht' => 'wahlrecht',
  ];

  $plid = _pw_globals_menu_link_add($path, $title, $weight, 'main-menu');

  foreach ($sub_items as $key => $value) {
    _pw_globals_menu_link_add("$path/$value", $key, $weight++, 'main-menu', $plid);
  }

  return $plid;
}
