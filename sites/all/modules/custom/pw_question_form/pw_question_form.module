<?php

/**
 * @file pw_question_form.module
 * helper functions for question form.
 */

/**
 * Implements hook_form_alter()..
 */
function pw_question_form_form_alter(&$form, &$form_state, $form_id) {

  if ($form_id == 'webform_client_form_10446') {

    // add custom validations
    $form['#validate'][] = 'pw_question_form_form_validate';

    // load recipient user by path
    if(empty($form['submitted']['recipient']['#value'])){
      if(arg(0) == 'user' && is_numeric(arg(1))){
        $user = user_load(arg(1));
      }
    }
    // load recipient user by parameter
    else{
      $user_name = $form['submitted']['recipient']['#value'];
      $user = user_load_by_name($user_name);
    }

    // exit if user was not found
    if(empty($user) || $user === FALSE){
      return;
    }

    // set uuid as recipient external id
    $form['submitted']['recipient_external_id']['#value'] = $user->uuid;

    // retrieve parliament tag from user
    $parliament_tid = $user->field_user_parliament['und'][0]['tid'];

    // query for subject terms tagged with same parliament as user has
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'taxonomy_term')
          ->entityCondition('bundle', 'dialogue_topics')
          ->fieldCondition('field_parliament', 'tid', $parliament_tid);
    $result = $query->execute();
    $subject_terms = taxonomy_term_load_multiple(array_keys($result['taxonomy_term']));

    // add subject to form element
    $a_options = array();
    foreach($subject_terms as $subject_key => $subject_term){
      $a_options[$subject_term->name] = $subject_term->name;
    }
    $form['submitted']['subject']['#options'] = $a_options;
  }
}

/**
 * Implements hook_form_validate()..
 * custom validations on webform submission
 */
function pw_question_form_form_validate($form_id, $form_values){

  // check if question has less than 2000 chars
  if(strlen($form_values['values']['submitted']['question']) > 2000){
    form_set_error('question', 'Ihre Frage hat mehr als die zulässigen 2000 Zeichen.');
  }

  // check user exists
  $user_name = $form_values['values']['submitted']['recipient'];
  $user = user_load_by_name($user_name);
  if($user === FALSE){
    form_set_error('user', 'Empfänger existiert nicht.');
  }
}
