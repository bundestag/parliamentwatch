<?php

/**
 * @file pw_maintenance.module
 */
/**
 * Implements hook_menu().
 */

function pw_maintenance_menu() {
  $items = array();

  $items['admin/config/pw/maintenance'] = array(
    'title' => 'PW Maintenance',
    'description' => 'Tools for maintenance.',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/config/pw/maintenance/clear_constituencies'] = array(
    'title' => 'Clear Constituencies',
    'description' => 'deletes constituencies which have no users in relation, are not a parent of other constituencies and
    a an other constituency with the same name exists.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pw_maintenance_clear_constituencies'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'pw_maintenance.admin.inc',
    );

  $items['admin/config/pw/maintenance/clear_user_revisions'] = array(
    'title' => 'Clear User Revisions',
    'description' => 'deletes all user revisions which are not in relation to any profile.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pw_maintenance_clear_user_revisions'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'pw_maintenance.admin.inc',
    );

  $items['admin/config/pw/maintenance/user_merge'] = array(
    'title' => 'Merge Users',
    'description' => 'Merge one user and its revisions into another.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pw_maintenance_user_merge'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'pw_maintenance.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_watchdog().
 */
function pw_maintenance_watchdog(array $log_entry) {
  if($log_entry['severity'] <= WATCHDOG_ERROR){
    // _pw_send_debug_mail("watchdog error - ".$_SERVER['SERVER_NAME'], $log_entry);
  }
}

/**
 * Implements hook_block_view_alter().
 * Counts how often blocks were shown.
 */
function pw_maintenance_block_view_alter($data, $block) {
  if(strpos(current_path(), "admin") > -1 || empty($block->delta)){
    return;
  }
  $path_log = dirname(__FILE__).'/blocks-shown-count.txt';
  $a_log = file_exists($path_log)?file($path_log):array();
  $block_found_in_file = FALSE;
  foreach($a_log as &$line){
    $data = explode(";", $line);
    if($data[0] == $block->delta){
      $line = $data[0].";".($data[1]+1);
      $block_found_in_file = TRUE;
    }
    $line = trim($line);
  }
  if(!$block_found_in_file){
    $a_log[] = $block->delta.";1";
  }
  $content_file = trim(implode("\n", $a_log));
  file_put_contents($path_log, $content_file);
}

