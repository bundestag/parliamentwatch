<?php
/**
 * @file
 * Code for the PW Kandidatencheck feature.
 */

include_once 'pw_kandidatencheck.features.inc';

/**
 * Implements hook_block_info().
 */
function pw_kandidatencheck_block_info() {
  $blocks['kandidaten_check_link'] = [
    'info' => t('Kandidaten-Check Link'),
    'cache' => DRUPAL_NO_CACHE,
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'user/*/edit',
    'region' => 'content',
  ];
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function pw_kandidatencheck_block_view($delta = '') {
  if($delta == 'kandidaten_check_link' && !empty(variable_get('pw_salt'))){
    $image = theme_image_style(
      array(
        'style_name' => 'pw_landscape_l',
        'path' => 'public://kandidaten-check-link.jpg',
        )
      );
    $hash = md5(variable_get('pw_salt')._pw_get_current_user()->uuid);
    $block = array();
    $block['content'] = l(
      $image, 
      'http://kandidatencheck.abgeordnetenwatch.de/thesen/?id='.$hash, 
      array(
        'html' => TRUE,
        'attributes' => array('target'=>'_blank'),
      )
    );
    return $block;
  }
}

/**
 * Returns query for all Kandidatencheck answers of the given account version.
 *
 * @param object $account
 *   The user account (version).
 *
 * @return EntityFieldQuery
 *   The query object.
 */
function pw_kandidatencheck_by_user_revision_query($account) {
  $q = new EntityFieldQuery();
  $q->entityCondition('entity_type', 'node');
  $q->entityCondition('bundle', 'pw_kc_position');
  $q->propertyCondition('status', NODE_PUBLISHED);
  $q->fieldCondition('field_pw_kc_user_reference', 'target_id', $account->uid);
  $q->fieldCondition('field_parliament', 'tid', pw_profiles_parliament($account)->tid);

  return $q;
}
