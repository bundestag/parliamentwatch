<?php
/**
 * @file
 * Code for the PW User Revision Switch feature.
 */

include_once 'pw_user_revision_switch.features.inc';


/**
 * Looks up the used metrics for the current parliament.
 */
function pw_user_revision_switch_is_shown_metric($metric, $parliament_name){
  $parliament_term = current(taxonomy_get_term_by_name($parliament_name, 'parliaments'));
  foreach ($parliament_term->field_shown_metrics['und'] as $value){
    if ($value["value"] == $metric){
      return true;
    }
  }
  return false;
}

/**
 * Implements hook_views_query_alter().
 * reduces views result to one user (politician) instead of many caused by user revisions
 */
function pw_user_revision_switch_views_query_alter(&$view, &$query) {

    $nid = arg(1);
    $node = node_load($nid);

  if ($view->name == 'pw_user_profile_fields_rev' && $view->current_display == 'block_1') {

    // query for correct user revision
    $parliament = _pw_get_current_parliament_term();
    $user_role = $node->field_dialogue_before_election['und'][0]['value'] == '1'?'candidate':'deputy';
    $user_id = $node->field_dialogue_recipient['und'][0]['target_id'];
    $subquery = db_select('user_archive_cache', 'uac');
    _pw_uac_add_conditions($subquery, array(
      'parliament' => $parliament->name,
      'roles' => $user_role,
      'uid' => $user_id,
      )
    );
    $subquery->addField('uac', 'vid');
    $result_vids = $subquery->execute()->fetchCol();

    // add vids as condition to views query
    $query->add_where(0, 'user_revision.vid', $result_vids);
  }
}
