<?php

/**
 * @file
 * Code for the PW Profiles feature. Implements the switch of the user profile view
 * depending on the role of the users whose profile is shown.
 */

/**
 * Implements the switch between standard and premium profile display modes
 * dependant on user role. The assignment can be configured in the admin part of
 * this module.
 * 
 * @param type $account
 * @param type $view_mode
 * @param type $langcode
 * @return type 
 */
function pw_profileswitch_user_custom_view($account, $view_mode = 'full', $langcode = NULL) {

  // custom breadcrumb
  $breadcrumb = array();
  $breadcrumb[] = l(t('Home'), '<front>');
  $breadcrumb[] = l(t('Parliaments'), 'parliaments');
  if(!empty($account->field_user_parliament['und'][0]['tid'])){
    $parliament_term = taxonomy_term_load($account->field_user_parliament['und'][0]['tid']);
    $breadcrumb[] = l($parliament_term->name, 'parliaments/'.strtolower($parliament_term->name));
    $is_candidate = array_search('Candidate', $account->roles);
    if($is_candidate){
      $breadcrumb[] = l(t('Candidates'), 'politicians/'.strtolower($parliament_term->name).'/candidates');
    }
    else{
      $breadcrumb[] = l(t('Deputies'), 'politicians/'.strtolower($parliament_term->name).'/deputies');
    }
  }
  $breadcrumb[] = $account->field_user_fname['und'][0]['value'].' '.$account->field_user_lname['und'][0]['value'];
  drupal_set_breadcrumb($breadcrumb);

  // retrieve user roles of the field field_user_roles_for_view_mode_switch:
  $assignedRoles = array();
  foreach ($account->field_user_roles_for_view_mode_s['und'] as $role) {
    $assignedRoles[$role['tid']] = $role['tid'];
  }
  
  $assignment = variable_get('pw_profileswitch_assignment', array()); // array(roleId => displayModeId)
  foreach ($assignment as $rid => $did) {
    if (array_key_exists($rid, $assignedRoles)) { // old: $account->roles
      $view_mode = $did;
      break; // "First role wins": We assume role assignments to users to be DISTINCT!
    }
  }
  return user_view($account, $view_mode, $langcode);
}

/**
 * Show a revision.
 */
function pw_user_revision_show($user, $vid) {
  if ($user->uid == "0") {
    // Load user by vid:
    $query = db_select('user_revision', 'ur');
    $query->addField('ur', 'uid');
    $query->condition('ur.vid', $vid); // This is the primary ID of the table
    $res = $query->execute();
    while ($row = $res->fetchAssoc()) {
      $account = user_revision_load($row["uid"], $vid); // Can only be one result maximum
    }
  } else {
    $account = user_revision_load($user->uid, $vid);
  }
  return pw_profileswitch_user_custom_view($account);
}

/**
 * Modify the default page callbacks from user.and user revisions modules to a custom one. 
 * This is needed for the display mode switch between standard profiles and premium profiles.
 * 
 * @param array $items 
 */
function pw_profileswitch_menu_alter(&$items) {
  $items['user/%user']['page callback'] = 'pw_profileswitch_user_view_page';
//  $items['profile/%/archive/%'] = array(
//    'page callback' => 'pw_user_revision_show',
//    'page arguments' => array(1, 3),
//    'access callback' => true,
//  );
  $items['user/%user/revisions/%/view'] = array(
    'page callback' => 'pw_user_revision_show',
    'page arguments' => array(1, 3),
    'access callback' => 'user_view_access', // default access callback for users
    'access arguments' => array(1),
  );
}

/**
 * Function overtaken from user.module and customized to call pw_profileswitch_user_custom_view()
 * 
 * @param type $account
 * @return type 
 */
function pw_profileswitch_user_view_page($account) {
  // An administrator may try to view a non-existent account,
  // so we give them a 404 (versus a 403 for non-admins).
  return is_object($account) ? pw_profileswitch_user_custom_view($account) : MENU_NOT_FOUND;
}

/**
 * Implementation of hook_menu().
 */
function pw_profileswitch_menu() {
  $items['admin/config/pw_profileswitch/settings'] = array(
      'title' => 'PW Profileswitch settings',
      'description' => 'Connect User Roles with Display Modes.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('pw_profileswitch_admin_settings'),
      'access arguments' => array('administer site configuration'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'pw_profileswitch.admin.inc',
  );
  return $items;
}
